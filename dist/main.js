!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=4)}([function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var a=(i=r,c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(A," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(o).concat([a]).join("\n")}var i,c,A;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);r&&a[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),n.push(A))}},n}},function(e,n,t){var r=t(2),a=t(3);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1};r(a,o);e.exports=a.locals||{}},function(e,n,t){"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),i=[];function c(e){for(var n=-1,t=0;t<i.length;t++)if(i[t].identifier===e){n=t;break}return n}function A(e,n){for(var t={},r=[],a=0;a<e.length;a++){var o=e[a],A=n.base?o[0]+n.base:o[0],l=t[A]||0,s="".concat(A," ").concat(l);t[A]=l+1;var u=c(s),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==u?(i[u].references++,i[u].updater(d)):i.push({identifier:s,updater:g(d,n),references:1}),r.push(s)}return r}function l(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=t.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var s,u=(s=[],function(e,n){return s[e]=n,s.filter(Boolean).join("\n")});function d(e,n,t,r){var a=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(n,a);else{var o=document.createTextNode(a),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(o,i[n]):e.appendChild(o)}}function f(e,n,t){var r=t.css,a=t.media,o=t.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,m=0;function g(e,n){var t,r,a;if(n.singleton){var o=m++;t=p||(p=l(n)),r=d.bind(null,t,o,!1),a=d.bind(null,t,o,!0)}else t=l(n),r=f.bind(null,t,n),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else a()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=a());var t=A(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var a=c(t[r]);i[a].references--}for(var o=A(e,n),l=0;l<t.length;l++){var s=c(t[l]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}t=o}}}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r)()(!0);a.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Black+Han+Sans&display=swap);"]),a.push([e.i,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\nbody {\n  background-color: burlywood;\n  font-family: 'Black Han Sans', sans-serif; }\n\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh; }\n  .wrapper .header {\n    padding: 1.5rem 0; }\n    .wrapper .header .logo {\n      font-size: 4rem;\n      text-align: center;\n      color: #7a5c33; }\n\n.main-page .role-box {\n  background-color: #e7d6bf;\n  width: 500px;\n  padding: 2rem 0;\n  text-align: center;\n  line-height: 1.5; }\n.main-page .btn-box {\n  margin-top: 5rem;\n  display: flex;\n  justify-content: center; }\n.main-page .start-btn {\n  cursor: pointer;\n  width: 300px;\n  height: 50px;\n  background-color: #b89666;\n  color: #fff;\n  border: none;\n  font-size: 1.3rem;\n  outline: none; }\n  .main-page .start-btn:active, .main-page .start-btn:focus {\n    background-color: #7a5c33; }\n.main-page .name-box {\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between; }\n.main-page .player-name {\n  border: 0;\n  background-color: #e7d6bf;\n  padding: 0.8rem 1rem;\n  width: 40%;\n  outline: none; }\n\n.footer {\n  font-family: sans-serif;\n  position: fixed;\n  bottom: 10px;\n  left: 0;\n  right: 0;\n  text-align: center; }\n\n.game-page {\n  display: none; }\n  .game-page .game-board-container {\n    display: flex; }\n    .game-page .game-board-container .game-board-name {\n      text-align: center; }\n    .game-page .game-board-container .board {\n      width: 400px;\n      height: 400px;\n      background-color: #7a5c33;\n      margin: 10px; }\n      .game-page .game-board-container .board tr,\n      .game-page .game-board-container .board td {\n        border: 1px solid #e7d6bf; }\n      .game-page .game-board-container .board td {\n        font-size: 1.5rem;\n        text-align: center;\n        cursor: pointer;\n        line-height: 79px;\n        width: 20%; }\n        .game-page .game-board-container .board td.active {\n          background-color: #4c3315; }\n  .game-page .game-history-container {\n    background-color: #b89666;\n    padding: 10px;\n    margin-top: 1.5rem; }\n    .game-page .game-history-container h3 {\n      margin-bottom: 1rem; }\n    .game-page .game-history-container span {\n      padding-right: 0.5rem; }\n  .game-page .btn-box {\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n    display: flex;\n    justify-content: center; }\n  .game-page .start-btn {\n    cursor: pointer;\n    width: 300px;\n    height: 50px;\n    background-color: #b89666;\n    color: #fff;\n    border: none;\n    font-size: 1.3rem;\n    outline: none; }\n    .game-page .start-btn:active, .game-page .start-btn:focus {\n      background-color: #7a5c33; }\n\n/*# sourceMappingURL=styles.css.map */\n","",{version:3,sources:["webpack://src/scss/reset.scss","webpack://src/scss/styles.css","webpack://src/scss/styles.scss"],names:[],mappings:"AAAA;;;CCIC;ADCD;;;;;;;;;;;;;EAaE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB,EAAA;;AAE1B,gDAAA;AACA;;EAEE,cAAc,EAAA;;AAEhB;EACE,cAAc,EAAA;;AAEhB;EACE,gBAAgB,EAAA;;AAElB;EACE,YAAY,EAAA;;AAEd;;EAEE,WAAW;EACX,aAAa,EAAA;;AAEf;EACE,yBAAyB;EACzB,iBAAiB,EAAA;;AE3CnB;EACE,2BAA2B;EAC3B,yCAAyC,EAAA;;AAG3C;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,aAAa,EAAA;EAEb;IACE,iBAAiB,EAAA;IAEjB;MACE,eAAe;MACf,kBAAkB;MAClB,cAAc,EAAA;;AAMlB;EACE,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,gBAAgB,EAAA;AAGlB;EACE,gBAAgB;EAChB,aAAa;EACb,uBAAuB,EAAA;AAGzB;EACE,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,aAAa,EAAA;EAEb;IAEE,yBAAyB,EAAA;AAI7B;EACE,gBAAgB;EAChB,aAAa;EACb,8BAA8B,EAAA;AAEhC;EACE,SAAS;EACT,yBAAyB;EACzB,oBAAoB;EACpB,UAAU;EACV,aAAa,EAAA;;AAIjB;EACE,uBAAuB;EACvB,eAAe;EACf,YAAW;EACX,OAAO;EACP,QAAQ;EACR,kBAAkB,EAAA;;AAGpB;EACE,aAAa,EAAA;EACb;IACE,aAAa,EAAA;IAEb;MACE,kBAAkB,EAAA;IAGpB;MACE,YAAY;MACZ,aAAa;MACb,yBAAyB;MACzB,YAAY,EAAA;MACZ;;QAEE,yBAAyB,EAAA;MAG3B;QACE,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf,iBAAiB;QACjB,UAAU,EAAA;QAEV;UACE,yBAAyB,EAAA;EAQjC;IACE,yBAAyB;IACzB,aAAa;IACb,kBAAkB,EAAA;IAElB;MACE,mBAAkB,EAAA;IAGpB;MACE,qBAAqB,EAAA;EAIzB;IACE,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,uBAAuB,EAAA;EAGzB;IACE,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,aAAa,EAAA;IAEb;MAEE,yBAAyB,EAAA;;ADI/B,qCAAqC",sourceRoot:""}]),n.default=a},function(e,n,t){"use strict";function r(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}t.r(n);var a=function(){function e(n,t){var r=t.row,a=void 0===r?5:r,o=t.cell,i=void 0===o?5:o,c=t.name,A=void 0===c?"":c;if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.board=this.createBoard(a,i),this.score=0,this.name=A,this.result={row:new Array(5).fill(0),cell:new Array(5).fill(0),left:0,right:0},null===document.getElementById(n))throw Error("".concat(n,"를 찾을 수 없습니다"));this.containerEl=document.getElementById(n)}var n,t,a;return n=e,(t=[{key:"createBoard",value:function(e,n){var t,r,a=[];this.board=[];for(var o=1;o<=e*n;o++)a.push(o);for(var i=0;i<e;i++){for(var c=[],A=0;A<n;A++){var l=(t=0,r=a.length-1,Math.floor(Math.random()*(r-t))+t);c.push(a[l]),a.splice(l,1)}this.board.push(c)}return this.board}},{key:"getResult",value:function(e){for(var n=this.result,t=this.board,r=0;r<t.length;r++)for(var a=0;a<t[r].length;a++)t[r][a]===parseInt(e.textContent,10)&&(n.row[r]++,n.cell[a]++,r===a?(n.left++,r+a===4&&n.right++):r+a===4&&n.right++);return this.getScoreString()}},{key:"getScoreString",value:function(){var e=this.result,n=e.cell.filter((function(e){return 5===e})),t=e.row.filter((function(e){return 5===e}));return this.score=n.length+t.length,5===e.left&&this.score++,5===e.right&&this.score++,this.score}}])&&r(n.prototype,t),a&&r(n,a),e}();function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],r=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(a)throw o}}return t}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return i(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function c(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(n){var t=o(n,2),r=t[0],a=t[1];!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.history=[],this.current=r,this.players=[r,a]}var n,t,r;return n=e,(t=[{key:"activeHistory",value:function(e,n){if(null===document.getElementById(n))throw Error();return this.historyBoxEl=document.getElementById(n),this.history.push(e.textContent),this.historyBoxEl.insertAdjacentHTML("beforeend","<span>".concat(e.textContent,"</span>")),this.current===this.players[0]?this.current=this.players[1]:this.current=this.players[0],this.history}}])&&c(n.prototype,t),r&&c(n,r),e}();function l(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(n){var t=this,r=n.bingo,a=n.callback,o=n.player;if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),!(a instanceof Function))throw new Error("콜백함수를 잘못 전달 받았습니다");for(var i=0;i<o.board.length;i++){for(var c=document.createElement("tr"),A=0;A<o.board[0].length;A++){var l=document.createElement("td");l.innerText=o.board[i][A],c.appendChild(l)}o.containerEl.querySelector(".board").appendChild(c)}o.containerEl.querySelector(".score-text").innerText=o.score,o.containerEl.querySelector(".game-board-name").innerText=o.name,o.containerEl.querySelector(".board").addEventListener("click",(function(e){if(r.current===o.name){e.target.classList.add("active");var n=document.getElementsByClassName("board"),i=[].reduce.call(n,(function(e,n){return n!==o.containerEl.querySelector(".board")?n:e}));t.addClassOfOtherBoard(i,e.target),a.call(null,e.target)}else alert("현재 차례가 아닙니다")}))}var n,t,r;return n=e,(t=[{key:"addClassOfOtherBoard",value:function(e,n){Array.prototype.forEach.call(e.children,(function(e){Array.prototype.forEach.call(e.children,(function(e){e.textContent===n.textContent&&e.classList.add("active")}))}))}}])&&l(n.prototype,t),r&&l(n,r),e}();function u(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(){var n=this;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e);var t=document.getElementById("me-name"),r=document.getElementById("you-name");document.getElementById("start-button").addEventListener("click",(function(e){var o=new a("me",{row:5,cell:5,name:t.value}),i=new a("you",{row:5,cell:5,name:r.value});n.startGame(o,i),e.preventDefault()}))}var n,t,r;return n=e,(t=[{key:"startGame",value:function(e,n){var t=this,r=new A([e.name,n.name]),a=r.history;try{var o=function(o){if(!a.includes(o.textContent)){r.activeHistory(o,"game-history-box");var i=e.getResult(o),c=n.getResult(o);e.containerEl.querySelector(".score-text").innerText=i,n.containerEl.querySelector(".score-text").innerText=c,5!==i&&5!==c||(alert("이겼습니다"),t.resetGame())}};new s({bingo:r,callback:o,player:e}),new s({bingo:r,callback:o,player:n})}catch(e){console.log(e)}document.querySelector(".main-page").style.display="none",document.querySelector(".game-page").style.display="block"}},{key:"resetGame",value:function(){[].map.call(document.querySelectorAll(".board"),(function(e){var n=e.cloneNode(!1);e.parentNode.replaceChild(n,e)})),[].map.call(document.querySelectorAll(".player-name"),(function(e){return e.value=""})),document.querySelector(".game-history-box").innerHTML="",document.querySelector(".main-page").style.display="block",document.querySelector(".game-page").style.display="none"}}])&&u(n.prototype,t),r&&u(n,r),e}();t(1);new d}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,